const { Bot, InlineKeyboard } = require("grammy");

const bot = new Bot("7452427840:AAEpJ7Lpg54mIIj-Js7t_smEeYKF8B4Qd_M");


bot.command("start", (ctx) => {
    ctx.reply(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–û—Ä–µ–ª –∏ —Ä–µ—à–∫–∞'! üé≤\n\n" +
        "–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ '–û—Ä–µ–ª' –∏–ª–∏ '–†–µ—à–∫–∞'. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /play, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.\n\n" +
        "–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help."
    );
});


bot.command("help", (ctx) => {
    ctx.reply(
        "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n" +
        "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /play, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.\n" +
        "2. –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É, –≤—ã–±—Ä–∞–≤ '–û—Ä–µ–ª' –∏–ª–∏ '–†–µ—à–∫–∞'.\n" +
        "3. –ë–æ—Ç —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Å–æ–æ–±—â–∏—Ç, –≤—ã–∏–≥—Ä–∞–ª–∏ –≤—ã –∏–ª–∏ –Ω–µ—Ç.\n\n" +
        "–ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã!"
    );
});


function flipCoin() {
    return Math.random() < 0.5 ? "–û—Ä–µ–ª" : "–†–µ—à–∫–∞";
}


bot.command("play", (ctx) => {
    startGame(ctx);
});


function startGame(ctx) {
    const keyboard = new InlineKeyboard()
        .text("–û—Ä–µ–ª", "heads")
        .text("–†–µ—à–∫–∞", "tails");

    ctx.reply("–°–¥–µ–ª–∞–π—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É:", { reply_markup: keyboard });
}


bot.on("callback_query:data", async (ctx) => {
    const userChoice = ctx.callbackQuery.data;

    if (userChoice === "heads" || userChoice === "tails") {
        const userChoiceText = userChoice === "heads" ? "–û—Ä–µ–ª" : "–†–µ—à–∫–∞";
        const result = flipCoin();

        const win = (userChoiceText === result);
        const outcomeMessage = win
            ? `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ`
            : `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. üò¢`;

        await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏: ${userChoiceText}\n–†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}\n${outcomeMessage}`);

        const playAgainKeyboard = new InlineKeyboard()
            .text("–î–∞", "play_again")
            .text("–ù–µ—Ç", "end_game");

        await ctx.reply("–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?", { reply_markup: playAgainKeyboard });
    } else if (userChoice === "play_again") {
        startGame(ctx);
    } else if (userChoice === "end_game") {
        await ctx.reply("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞. üòä");
    }

    await ctx.answerCallbackQuery();
});


bot.start();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');
